{
    "name": "JSON Object",
    "description": "[object Object]",
    "menu_assignment_operators": {
        "assignment": "=",
        "addition_assignment": "+=",
        "subtraction_assignment": "-=",
        "multiplication_assignment": "*=",
        "division_assignment": "/=",
        "remainder_assignment": "%=",
        "exponentiation_assignment": "**=",
        "left_shift_assignment": "<<=",
        "right_shift_assignment": ">>=",
        "unsigned_right_shift_assignment": ">>>=",
        "bitwise_and_assignment": "&=",
        "bitwise_xor_assignment": "^=",
        "bitwise_or_assignment": "|=",
        "logical_and_assignment": "&&=",
        "logical_or_assignment": "||=",
        "nullish_coalescing_assignment": "??="
    },
    "menu_up_or_down": {
        "up": "up",
        "down": "down"
    },
    "help": {
        "": "JSON Object Help",
        "github": "Github",
        "mdn_json": "MDN JSON",
        "mdn_javascript": "MDN JavaScript",
        "mdn_object": "MDN Object",
        "mdn_array": "MDN Array"
    },
    "type": {
        "": "Type",
        "typeof": "typeof [a]",
        "string": "String [a]",
        "number": "Number [a]",
        "undefined": "undefined",
        "null": "null",
        "true": "true",
        "false": "false",
        "js_boolean": "JS Boolean[a]",
        "scratch_boolean": "Scratch Boolean[a]",
        "equality": "[a] == [b]",
        "inequality": "[a] != [b]",
        "strict_equality": "[a] === [b]",
        "strict_inequality": "[a] !== [b]",
        "number_isNaN": "Number isNaN [a]",
        "isArray": "[a] is array",
        "conditional_operator": "[b] ? [t] : [f]"
    },
    "tempvar": {
        "": "Temp Var",
        "get": "Temp Var [name]",
        "set": "Temp Var [name] [assignmentOperator] [value]"
    },
    "json": {
        "": "JSON",
        "parse": "JSON.parse [a]",
        "stringify": "JSON.stringify [a]",
        "getFromKey": "Object [json] [key]",
        "setFromKey": "Object [json] [key] [assignmentOperator] [value]",
        "delete": "Object [json] delete [key]",
        "assign": "Object [json] assign [source]",
        "entries": "Object [json] entries",
        "freeze": "Object [json] freeze",
        "freeze_command": "Object [json] freeze",
        "fromEntries": "Object fromEntries [entries]",
        "getOwnPropertyNames": "Object [json] getOwnPropertyNames",
        "hasOwn": "Object [json] hasOwn [key]",
        "is": "Object is [a] [b]",
        "isExtensible": "Object [json] isExtensible",
        "isFrozen": "Object [json] isFrozen",
        "isSealed": "Object [json] isSealed",
        "keys": "Object [json] keys",
        "preventExtensions": "Object [json] preventExtensions",
        "preventExtensions_command": "Object [json] preventExtensions",
        "seal": "Object [json] seal",
        "seal_command": "Object [json] seal",
        "values": "Object [json] values"
    },
    "array": {
        "": "Array",
        "new_array": "new Array [length]",
        "length": "Array [a] length",
        "from": "Array from [a]",
        "at": "Array [a] at [index]",
        "concat2": "Array concat [a] [b]",
        "concat3": "Array concat [a] [b] [c]",
        "copyWithin1": "Array [array] copyWithin [a]",
        "copyWithin2": "Array [array] copyWithin [a] [b]",
        "copyWithin3": "Array [array] copyWithin [a] [b] [c]",
        "fill1": "Array [array] fill [a]",
        "fill2": "Array [array] fill [a] [b]",
        "fill3": "Array [array] fill [a] [b] [c]",
        "flat0": "Array [array] flat",
        "flat1": "Array [array] flat [a]",
        "includes": "Array [array] includes [a]",
        "indexOf": "Array [a] indexOf [searchElement] fromIndex [fromIndex]",
        "join": "Array [array] join [a]",
        "lastIndexOf": "Array [a] lastIndexOf [searchElement] fromIndex [fromIndex]",
        "pop": "Array [array] pop",
        "pop_command": "Array [array] pop",
        "push": "Array [array] push [a]",
        "push_command": "Array [array] push [a]",
        "reverse": "Array [array] reverse",
        "toReversed": "Array [array] toReversed",
        "shift": "Array [array] shift",
        "shift_command": "Array [array] shift",
        "slice1": "Array [array] slice [a]",
        "slice2": "Array [array] slice [a] [b]",
        "sort": "Array [array] sort [upOrDown]",
        "sort_by": "Array [array] sort [upOrDown] by [key]",
        "toSorted": "Array [array] toSorted [upOrDown]",
        "toSorted_by": "Array [array] toSorted [upOrDown] by [key]",
        "splice0": "Array [array] splice [start] [deleteCount]",
        "splice1": "Array [array] splice [start] [deleteCount] [item]",
        "splice0_command": "Array [array] splice [start] [deleteCount]",
        "splice1_command": "Array [array] splice [start] [deleteCount] [item]",
        "toSpliced0": "Array [array] toSpliced [start] [deleteCount]",
        "toSpliced1": "Array [array] toSpliced [start] [deleteCount] [item]",
        "unshift": "Array [array] unshift [a]",
        "unshift_command": "Array [array] unshift [a]",
        "with": "Array [array] with [index] [value]",
        "to_set_then_to_array": "Array.from ( new Set [array] )"
    }
}